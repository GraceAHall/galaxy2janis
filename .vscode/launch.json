{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [

        {
            "name": "rip galaxy types",
            "type": "python",
            "request": "launch",
            "program": "galaxy_types/parse_galaxy_types.py",
            "console": "integratedTerminal",
            "args": [
                "galaxy_types", "datatypes_conf.xml.sample"
            ]
        },
        {
            "name": "read_inputs",
            "type": "python",
            "request": "launch",
            "program": "io/read_inputs.py",
            "console": "integratedTerminal",

        },
        {
            "name": "read_metadata",
            "type": "python",
            "request": "launch",
            "program": "io/read_metadata.py",
            "console": "integratedTerminal",
        },
        {
            "name": "expand_macros",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "tools/fastp", "fastp.xml"
            ]
        },
        {
            "name": "test",
            "type": "python",
            "request": "launch",
            "program": "test.py",
            "console": "integratedTerminal",

        },
        {
            "name": "XMLParser",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "busco.xml", "tools/busco"
            ]
        },
        {
            "name": "macrotest",
            "type": "python",
            "request": "launch",
            "program": "classes/MacroExpander.py",
            "console": "integratedTerminal"
        },
        {
            "name": "bwa-mem",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "bwa-mem.xml", "tools/bwa"
            ]
        },
        {
            "name": "busco",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "busco.xml", "tools/busco"
            ]
        },
        {
            "name": "spades",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "spades.xml", "tools/spades"
            ]
        },
        {
            "name": "augustus",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "augustus.xml", "tools/augustus"
            ]
        },
        {
            "name": "sniffles",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "sniffles.xml", "tools/sniffles"
            ]
        },
        {
            "name": "bandage image",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "bandage_image.xml", "tools/bandage"
            ]
        },
        {
            "name": "velvetg",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "velvetg.xml", "tools/velvet"
            ]
        },
        {
            "name": "cutadapt",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "cutadapt.xml", "tools/cutadapt"
            ]
        },
        {
            "name": "genetrack",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "genetrack.xml", "tools/genetrack"
            ]
        },
        {
            "name": "disco",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "disco.xml", "tools/disco"
            ]
        },
        {
            "name": "abricate",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "abricate.xml", "tools/abricate"
            ]
        },
        {
            "name": "clusterBed",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "clusterBed.xml", "tools/bedtools"
            ]
        },
        {
            "name": "mothur_pca",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "pca.xml", "tools/mothur"
            ]
        },
        {
            "name": "filtlong",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "filtlong.xml", "tools/filtlong"
            ]
        },
        {
            "name": "abricate",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "abricate.xml", "tools/abricate"
            ]
        },
        {
            "name": "annotateBed",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "annotateBed.xml", "tools/bedtools"
            ]
        },
        {
            "name": "spacingBed",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "spacingBed.xml", "tools/bedtools"
            ]
        },
        {
            "name": "subtractBed",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "subtractBed.xml", "tools/bedtools"
            ]
        },
        {
            "name": "collection_element_identifiers",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "collection_element_identifiers.xml", "tools/collection_element_identifiers"
            ]
        },
        {
            "name": "fastp",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "fastp.xml", "tools/fastp"
            ]
        },
        {
            "name": "kma_map",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "kma_map.xml", "tools/kma"
            ]
        },
        {
            "name": "deseq2",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "deseq2.xml", "tools/deseq2"
            ]
        },
        {
            "name": "abyss-pe",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "abyss-pe.xml", "tools/abyss"
            ]
        },
        {
            "name": "cat_bins",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "args": [
                "cat_bins.xml", "tools/cat"
            ]
        },
        {
            "name": "pyPEG sketchpad",
            "type": "python",
            "request": "launch",
            "program": "command_parsing/pyPEG2.py",
            "console": "integratedTerminal"
        },
        {
            "name": "pyPEG busco",
            "type": "python",
            "request": "launch",
            "program": "command_parsing/command_parser.py",
            "console": "integratedTerminal",
            "args": [
                "command_parsing/data/busco.txt"
            ]
        },
        {
            "name": "LARK sketchpad",
            "type": "python",
            "request": "launch",
            "program": "command_parsing/LARK.py",
            "console": "integratedTerminal"
        },
        {
            "name": "LARK parameters",
            "type": "python",
            "request": "launch",
            "program": "command_parsing/parameters/parameters.py",
            "console": "integratedTerminal"
        },
        {
            "name": "LARK bash conditional",
            "type": "python",
            "request": "launch",
            "program": "command_parsing/bash_conditional/b_conditional.py",
            "console": "integratedTerminal"
        },
        {
            "name": "LARK cheetah conditional",
            "type": "python",
            "request": "launch",
            "program": "command_parsing/cheetah_conditional/ch_conditional.py",
            "console": "integratedTerminal"
        },
        {
            "name": "parse tools",
            "type": "python",
            "request": "launch",
            "program": "src/parsing_manager.py",
            "console": "integratedTerminal",
            "args": [
                "tools", "parsed_tools"
            ]
        }
    ]
}