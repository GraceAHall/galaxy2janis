{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [

        {
            "name": "test",
            "type": "python",
            "request": "launch",
            "program": "test.py",
            "console": "integratedTerminal",
        },
        {
            "name": "rip galaxy types",
            "type": "python",
            "request": "launch",
            "program": "galaxy_types/parse_galaxy_types.py",
            "console": "integratedTerminal",
            "args": [
                "galaxy_types", "datatypes_conf.xml.sample"
            ]
        },
        {
            "name": "bulk_tool_parsing",
            "type": "python",
            "request": "launch",
            "program": "src/bulk_tool_parsing.py",
            "console": "integratedTerminal",
            "args": [
                "test/data/tools", "parsed/tools"
            ]
        },
        {
            "name": "bulk_workflow_parsing",
            "type": "python",
            "request": "launch",
            "program": "src/bulk_workflow_parsing.py",
            "console": "integratedTerminal",
            "args": [
                "test/data/workflows", "parsed/workflows"
            ]
        },
        {
            "name": "tool_reporting",
            "type": "python",
            "request": "launch",
            "program": "src/tool_reporting.py",
            "console": "integratedTerminal",
            "args": [
                "parsed/tools"
            ]
        },
        {
            "name": "workflow_reporting",
            "type": "python",
            "request": "launch",
            "program": "src/workflow_reporting.py",
            "console": "integratedTerminal",
            "args": [
                "parsed/workflows"
            ]
        },
        // TOOLS
        {
            "name": "abricate",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "tool",
                "--dir", "test/data/tools/abricate", 
                "--xml", "abricate.xml",
            ]
        },
        {
            "name": "unicycler",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "tool",
                "--dir", "test/data/tools/unicycler", 
                "--xml", "unicycler.xml",
            ]
        },
        {
            "name": "quast",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "tool",
                "--dir", "test/data/tools/quast", 
                "--xml", "quast.xml",
            ]
        },
        {
            "name": "quast-59db8ea8c845",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "tool",
                "--dir", "simple_workflow/wrappers/quast-59db8ea8c845", 
                "--xml", "quast.xml",
            ]
        },
        // WORKFLOWS
        {
            "name": "super simple workflow",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/mine/super_simple_workflow.ga",
                "--outdir", "parsed/workflows"
            ]
        },
        {
            "name": "super simple unicycler",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/mine/super_simple_unicycler.ga",
                "--outdir", "parsed/workflows"
            ]
        },
        {
            "name": "simple workflow",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/mine/simple_workflow.ga",
                "--outdir", "parsed/workflows"
            ]
        },
        {
            "name": "medium_workflow",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/mine/medium_workflow.ga",
                "--outdir", "parsed/workflows"
            ]
        },
        {
            "name": "rna_seq_reads_to_counts",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/transcriptomics/rna-seq-reads-to-counts.ga",
                "--outdir", "parsed/workflows"
            ]
        },
        {
            "name": "debruijn_graph",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/assembly/debruijn-graph.ga",
                "--outdir", "parsed/workflows"
            ]
        },
        {
            "name": "mrsa-illumina",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/assembly/mrsa-illumina.ga",
                "--outdir", "parsed/workflows"
            ]
        },
        {
            "name": "mrsa-nanopore",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/assembly/mrsa-nanopore.ga",
                "--outdir", "parsed/workflows"
            ]
        },
        {
            "name": "apollo",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/genome_annotation/apollo.ga",
                "--outdir", "parsed/workflows"
            ]
        },
        {
            "name": "sars-cov-2",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/variants/sars-cov-2.ga",
                "--outdir", "parsed/workflows"
            ]
        },
        {
            "name": "hard workflow",
            "type": "python",
            "request": "launch",
            "program": "src/gxtool2janis.py",
            "console": "integratedTerminal",
            "justMyCode": false,
            "args": [
                "workflow",
                "test/data/workflows/mine/hard_workflow.ga",
                "--outdir", "parsed/workflows"
            ]
        },
    ]
}